###############################################################################
# Author: Bryan Shiffman
# Name: TechNight-WebAPI-CICD (Workflow)
#
# Workflow used to package, deploy, and configure the ATD-TechNight-WebAPI
###############################################################################

name: ATD-TechNight-WebAPI-CICD

env:
  DOTNET_VERSION: '7.0'
  WEBAPP_BASE_PATH: 'My-WebAPI'

on:
  push:
    branches: [ "main" ]
    paths: 
      'My-WebAPI/**'

  pull_request:
    branches: [ "main" ]
    paths: 
      'My-WebAPI/**'

  workflow_dispatch:
    inputs:
      reason:
        description: 'The reason for running the workflow'
        required: true
        default: 'Manual build from GitHub UI'

# Write permissions are the minimal required by the Publish Test Results action
# https://github.com/EnricoMi/publish-unit-test-result-action#permissions
permissions:
  checks: write
  pull-requests: write

jobs:

########################
# BUILD STAGE
########################
  build:
    runs-on: ubuntu-latest

    outputs:
      AZURE_WEBAPP_NAME: ${{ steps.setEnvVariables.outputs.AZURE_WEBAPP_NAME }}
      RESOURCE_GROUP: ${{ steps.setEnvVariables.outputs.RESOURCE_GROUP }} 

    steps:

      # Checkout the repository to the GitHub Actions runner
      - name: Checkout repository
        uses: actions/checkout@v2

      # As of June 2023, GH offers no built-in way to pass environment variables to a
      # reusable workflow. This is a workaround as suggested in this thread: 
      # https://github.com/orgs/community/discussions/26671
      - name: Set variables to be passed to the reusable workflow
        id: setEnvVariables
        run: |
          echo "AZURE_WEBAPP_NAME=ATD-TechNightWorkshopWebApp" >> "$GITHUB_OUTPUT"
          echo "RESOURCE_GROUP=rg-ATDTechNight"        >> "$GITHUB_OUTPUT"

      # Add Action to Setup .NET Core
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Build Web app
        run: |
          dotnet build ${{ env.WEBAPP_BASE_PATH }}/WebAPI -c Release 

      - name: Run unit tests
        run: |
          dotnet test ${{ env.WEBAPP_BASE_PATH }}/WebAPI -c Release --logger "trx;logfilename=TestResults.trx"

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: ${{ env.WEBAPP_BASE_PATH }}/**/*.trx

      - name: Publish Web App Artifacts
        run: |
          dotnet publish ${{ env.WEBAPP_BASE_PATH }}/WebAPI -c Release -o ${{ env.DOTNET_ROOT }}/technight-webapi

      - name: Upload web app artifact
        uses: actions/upload-artifact@v2
        with:
          name: ATD-TechNight-Artifact
          path: ${{ env.DOTNET_ROOT }}/technight-webapi

      - name: Upload Bicep template
        uses: actions/upload-artifact@v2
        with:
          name: ATD-TechNight-Artifact
          path: arm-templates/webapp/azuredeploy.bicep


########################
# DEVELOPMENT STAGE 
########################
  dev:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment: 'DEVELOPMENT'

    # declare environment variables for the dev environment prefix
    env:
      ENVIRONMENT_PREFIX: DEV

    steps:

      # Download the artifacts from the build job (actions/download-artifact@v3)
      - name: download-artifact
        id: download
        uses: actions/download-artifact@v3
        with:
          name: ATD-TechNight-Artifact

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      #Add action to deploy the Web App Bicep Template (azure/arm-deploy@v1)
      - name: Deploy Web App Bicep Template
        uses: azure/arm-deploy@v1
        with:
          scope: resourcegroup
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.ENVIRONMENT_PREFIX }}-${{ needs.build.outputs.RESOURCE_GROUP }}
          template: azuredeploy.bicep
          parameters: >
            envPrefix=${{ env.ENVIRONMENT_PREFIX }}
            webAppName=${{ needs.build.outputs.AZURE_WEBAPP_NAME }}
            sku=B1
          failOnStdErr: false


      #Deploy the Web App Artifacts (azure/webapps-deploy@v2)
      - name: Deploy Web App Artifacts
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.ENVIRONMENT_PREFIX }}-${{ needs.build.outputs.AZURE_WEBAPP_NAME }}
          package: ${{steps.download.outputs.download-path}}
          startup-command: 'dotnet WebAPI.dll'

      #Configure the Web App Settings (azure/appservice-settings@v1)
      - name: Configure web app settings
        uses: azure/appservice-settings@v1
        with:
          app-name: ${{ env.ENVIRONMENT_PREFIX }}-${{ needs.build.outputs.AZURE_WEBAPP_NAME }}
          app-settings-json: ${{ secrets.APP_SETTINGS }}
          connection-strings-json: ${{ secrets.CONNECTION_STRINGS }}

      #log out of Azure 
      - name: Logout of Azure
        run: az logout

##############################
# PRODUCTION STAGE (FOR LATER)
##############################
#  prd:
      # without the below if statement the job will be displayed as "failed" if a change 
      # isn't coming from the develop or main branch
#      if: github.ref == 'refs/heads/main' 
#      needs: [build, dev]
#      uses: ./.github/workflows/webapp-deploy-template.yml
#      permissions:
#          contents: none
#      with:
#        ENVIRONMENT_PREFIX: PRD
#        ENVIRONMENT: PRODUCTION
#        AZURE_WEBAPP_NAME: ${{ needs.build.outputs.AZURE_WEBAPP_NAME }}
#        RESOURCE_GROUP: ${{ needs.build.outputs.RESOURCE_GROUP }}
#        STARTUP_COMMAND: "dotnet WebAPI.dll"
#        AZURE_WEBAPP_SKU: B1
#      secrets: inherit
